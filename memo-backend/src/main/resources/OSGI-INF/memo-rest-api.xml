<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/blueprint"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
       http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.0.0.xsd">


    <cm:property-placeholder id="memo.rest-api.placeholder" persistent-id="memo.rest-api">
        <cm:default-properties>
            <cm:property name="runMode" value="prod" />
            <cm:property name="host" value="0.0.0.0" />
            <cm:property name="port" value="8080" />
			<cm:property name="test.error" value="error" />
			<cm:property name="prod.error" value="error" />
        </cm:default-properties>
    </cm:property-placeholder>

    <bean id="staticHandler" class="org.eclipse.jetty.server.handler.ResourceHandler">
        <property name="resourceBase" value="file:D://memo-app" />
    </bean>

    <reference id="memoDataSourceRef" 
        interface="javax.sql.DataSource" filter="(osgi.jndi.service.name=jdbc/memo)" 
        timeout="10000" />

    <camelContext id="rest-api-context" trace="false" useMDCLogging="true" xmlns="http://camel.apache.org/schema/blueprint">
        <errorHandler id="deadLetterErrorHandler" 
                      type="DeadLetterChannel" 
                      deadLetterUri="activemq:topic:deadMessages"
                      redeliveryPolicyRef="myPolicy" />

        <redeliveryPolicyProfile id="myPolicy" maximumRedeliveries="0" redeliveryDelay="5000" />

        <onException>
            <exception>java.lang.Exception</exception>
            <redeliveryPolicy maximumRedeliveries="0" redeliveryDelay="5000" />
            <handled>
                <constant>true</constant>
            </handled>

            <log message="ERROR OCCURED" />
            <setHeader headerName="EXCEPTION">
                <simple>${exception.message}</simple>
            </setHeader>

            <setHeader headerName="EXCEPTION_STACKTRACE">
                <simple>${exception.stacktrace}</simple>
            </setHeader>
            <setBody>
                <simple>ERROR :: ${exception.message}
STACKTRACE :: ${exception.stacktrace}
                </simple>
            </setBody>
            
            <to uri="file:{{{{runMode}}.error}}" />
        </onException>

        <restConfiguration component="jetty" host="{{host}}" port="{{port}}" enableCORS="true" >
            <corsHeaders key="Access-Control-Allow-Origin" value="*" />
        </restConfiguration>

        <rest path="/api">
            <get uri="/memos">
                <description>Get all memos.</description>
                <to uri="activemq:queue:memo-get-all" />
            </get>
			
			<get uri="/types">
				<description>Get typelist</description>
				<to uri="activemq:queue:types-get-all" />
			</get>
			
			<post uri="/memos" consumes="application/json" produces="application/json" bindingMode="off">
				<description>Insert new memo</description>
				<to uri="activemq:queue:memo-insert" />
			</post>
			
			<delete uri="/memos/{memo_id}" consumes="application/json" produces="application/json" bindingMode="off">
				<description>Delete memo</description>
				<to uri="activemq:queue:memo-remove" />
			</delete>
        </rest>

        <route id="rest-web-static-route">
            <from uri="jetty:http://{{host}}:{{port}}?enableCORS=true&amp;handlers=#staticHandler" />
            <to uri="mock:empty?retainFirst=1" />
        </route>

    </camelContext>

</blueprint>