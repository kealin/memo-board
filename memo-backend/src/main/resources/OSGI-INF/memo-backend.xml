<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/blueprint"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
       http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.0.0.xsd">

    <cm:property-placeholder id="memo.placeholder" 
                             persistent-id="memo">
        <cm:default-properties>
            <cm:property name="runMode" value="test" />
            <cm:property name="test.error" value="error" />
            <cm:property name="prod.error" value="error" />
        </cm:default-properties>
    </cm:property-placeholder>

    <reference id="memoDataSourceRef" 
        interface="javax.sql.DataSource" filter="(osgi.jndi.service.name=jdbc/memo)" 
        timeout="10000" />

    <camelContext id="memo-context" trace="false" useMDCLogging="true" xmlns="http://camel.apache.org/schema/blueprint">
        <errorHandler id="deadLetterErrorHandler" 
                      type="DeadLetterChannel" 
                      deadLetterUri="activemq:topic:deadMessages"
                      redeliveryPolicyRef="myPolicy" />
					  
	   <dataFormats>
              <json id="jack" library="Jackson"/>
        </dataFormats>			  
					  
        <redeliveryPolicyProfile id="myPolicy" maximumRedeliveries="0" redeliveryDelay="5000" />

        <onException>
            <exception>java.lang.Exception</exception>
            <redeliveryPolicy maximumRedeliveries="0" redeliveryDelay="5000" />
            <handled>
                <constant>true</constant>
            </handled>

            <log message="ERROR OCCURED" />
            <setHeader headerName="EXCEPTION">
                <simple>${exception.message}</simple>
            </setHeader>

            <setHeader headerName="EXCEPTION_STACKTRACE">
                <simple>${exception.stacktrace}</simple>
            </setHeader>
            <setBody>
                <simple>ERROR :: ${exception.message}
STACKTRACE :: ${exception.stacktrace}
                </simple>
            </setBody>
            
            <to uri="file:{{{{runMode}}.error}}" />
        </onException>

        <route id="memo-get-all">
            <from uri="activemq:queue:memo-get-all" />      
            <setBody>
                <simple>
                    SELECT
						memos.id,
						memos.title,
						memos.content,
						memos.date,
						status_info.type,
						status.status_id
                  FROM memos

                  INNER JOIN status
                    ON memos.id = status.memo_id

                  INNER JOIN status_info
                    ON status.status_id = status_info.id
                </simple>
            </setBody>    
			<to uri="direct:sendQuery"/>
        </route>
		
		<route id="memo-insert-new">
			<from uri="activemq:queue:memo-insert"/>		
			<log message="Enter body: ${body}"/>
			<setHeader headerName="memo_content">
				<jsonpath suppressExceptions="true">memo_content</jsonpath>
			</setHeader>
			
			<setHeader headerName="memo_title">
				<jsonpath suppressExceptions="true">memo_title</jsonpath>
			</setHeader>
			
			<setHeader headerName="status_id">
				<jsonpath suppressExceptions="true">status_id</jsonpath>
			</setHeader>
			
			<validate><simple>${headers.memo_content} != ""</simple></validate>
            <validate><simple>${headers.memo_title} != ""</simple></validate>
			<validate><simple>${headers.status_id} != ""</simple></validate>
			
			<to uri="direct:insert-memo" />	
		</route>
		
		<route id="insert-memo">
            <from uri="direct:insert-memo" />
			<log message="Entered insert route, title: ${headers.memo_title}, content: ${headers.memo_content}"/>
            <setBody>
                <simple>
                  INSERT INTO memos
                             (title, content)
				  VALUES
							('${headers.memo_title}', '${headers.memo_content}')
                </simple>
            </setBody>
            <to uri="jdbc:memoDataSourceRef" />
			
            <setBody>
                <simple>
                      SELECT LAST_INSERT_ID(id) as memo_id
					  FROM memos
					  ORDER BY LAST_INSERT_ID(id) desc limit 1;
                </simple>
            </setBody>
			
            <to uri="jdbc:memoDataSourceRef" />
            <marshal ref="jack"/>
			
			<setHeader headerName="memo_id">
				<jsonpath suppressExceptions="true">$[0].memo_id</jsonpath>
			</setHeader>
			
			<to uri="direct:insert-status"/>
        </route>
		
		<route id="insert-status">
			<from uri="direct:insert-status" />
			
			<setBody>
				<simple>
					INSERT INTO status
						(memo_id, status_id)
					VALUES
						('${headers.memo_id}', '${headers.status_id}')
				</simple>
			</setBody>
			 <to uri="jdbc:memoDataSourceRef" />
			 <setBody>
				<simple>
					{
						"id" : ${headers.memo_id}
					}
				</simple>
			 </setBody>
		</route>
		
		<route id="memo-remove">
			<from uri="activemq:queue:memo-remove" />
			<setBody>
				<simple>
				DELETE FROM memos
				WHERE id = ${headers.memo_id}
				</simple>
			</setBody>
			<to uri="jdbc:memoDataSourceRef" />
		</route>
		
		<route id="memo-update">
			<from uri="activemq:queue:memo-update" />
			
			<log message="Recieved ${body}" />
			
			<setHeader headerName="memo_id">
				<jsonpath suppressExceptions="true">id</jsonpath>
			</setHeader>
			
			<setHeader headerName="memo_title">
				<jsonpath suppressExceptions="true">title</jsonpath>
			</setHeader>
			
			<setHeader headerName="memo_content">
				<jsonpath suppressExceptions="true">content</jsonpath>
			</setHeader>
			
			<setHeader headerName="status_id">
				<jsonpath suppressExceptions="true">status_id</jsonpath>
			</setHeader>
			
			<setBody>
				<simple>
					UPDATE memos 
					SET title='${headers.memo_title}',
						  content='${headers.memo_content}'
				    WHERE id = ${headers.memo_id}
				</simple>
			</setBody>
			<to uri="jdbc:memoDataSourceRef" />
			<setBody>
				<simple>
					UPDATE status 
					SET status_id=${headers.status_id}
				    WHERE memo_id = ${headers.memo_id}
				</simple>
			</setBody>		
			<to uri="jdbc:memoDataSourceRef" />
		</route>
		
		<route id="types-get-all">
			<from uri="activemq:queue:types-get-all" />
			<setBody>
				<simple>
				SELECT
					*
				FROM status_info
				 </simple>
			</setBody>
			<to uri="direct:sendQuery"/>
		</route>
		
		<route id="sendQuery">	
			<from uri="direct:sendQuery" />
			 <to uri="jdbc:memoDataSourceRef" />
			 <marshal ref="jack"/>
		</route>
	
    </camelContext>
</blueprint>